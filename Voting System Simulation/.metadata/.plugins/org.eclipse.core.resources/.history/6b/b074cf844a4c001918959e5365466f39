package main;

import java.util.Random;

import main.Method.Borda;
import main.Method.Lottery;
import main.Method.Plurality;
import main.Method.Range;

public class Election {
	
	public int SEED;
	public Random r;
	
	public Voter[] voters;
	public Candidate[] candidates;
	
	private Plurality plurality;
	private Range range;
	private Borda borda;
	private Lottery lottery;
	
	public Election(int SEED) {
		this.SEED = SEED;
		setupElection();
	};
	
	private void setupElection() {
		r = new Random(SEED);
		
		voters = new Voter[Main.VOTER_NUM];
		candidates = new Candidate[Main.CAND_NUM];
		for(int i = 0; i < Main.VOTER_NUM; i++)
			voters[i] = new Voter();
		for(int i = 0; i < Main.CAND_NUM; i++)
			candidates[i] = new Candidate();
		
		plurality = new Plurality(this);
		range = new Range(this);
		borda = new Borda(this);
		lottery = new Lottery(this);
	}
	
	public void runElection() {
		plurality.runElection();
		range.runElection();
		borda.runElection();
		lottery.runElection();
	}
	
	public void printResults() {
		System.out.println(plurality.printResults());
		System.out.println(range.printResults());
		System.out.println(borda.printResults());
		System.out.println(lottery.printResults());
	}
	
	public double[] average(){
		double[] av = new double[] {0.0,0.0};
		for(Voter v : voters) {
			av[0]+=v.getViews(0);
			av[1]+=v.getViews(1);
		}
		av[0]/=Main.VOTER_NUM;
		av[1]/=Main.VOTER_NUM;
		return av;
	}
	
	public class Voter{
		private double[] views;
		
		private Voter() {
			this.views = new double[] {r.nextGaussian()/5, r.nextGaussian()/5};
		}
		
		public double[] getViews() {
			return views;
		}
		
		public double getViews(int index) {
			return views[index];
		}
		
		public double utility(Candidate c) {
			double disappointment = 0;
			for(int i = 0; i < views.length; i++) {
				disappointment += (views[i]-c.getViews(i))*(views[i]-c.getViews(i));
			}
			return -disappointment;
		}
		
	}
	
	public class Candidate{
		private double[] views;
		
		private Candidate() {
			this.views = new double[] {r.nextGaussian()/5, r.nextGaussian()/5};
		}
		
		public double[] getViews() {
			return views;
		}
		
		public double getViews(int index) {
			return views[index];
		}
		
	}

}
