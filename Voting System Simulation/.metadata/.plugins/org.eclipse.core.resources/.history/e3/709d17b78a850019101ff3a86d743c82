package simulation;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

public class Main {

	public static final int VOTER_NUM = 1000;
	public static int CAND_NUM;
	
	private Main() throws IOException {
		/**************************************************************************************/
		
		CAND_NUM = 3;
		BufferedWriter bw = new BufferedWriter(new FileWriter(new File("Results_5.txt")));
		
		double start = System.nanoTime();
		for(int i = 0; i < 1000000; i++) {
			Election e = new Election(i);
			e.runElection();
			bw.write(e.printViews(0));						bw.newLine();
			bw.write(e.printViews(1));						bw.newLine();
			bw.write(e.population_utility.printResults());	bw.newLine();
			bw.write(e.honest_plurality.printResults());	bw.newLine();
			bw.write(e.rational_plurality.printResults());	bw.newLine();
			bw.write(e.honest_range.printResults());		bw.newLine();
			bw.write(e.strategic_range.printResults());		bw.newLine();
			bw.write(e.rational_range.printResults());		bw.newLine();
			bw.write(e.honest_borda.printResults());		bw.newLine();
			bw.write(e.rational_borda.printResults());		bw.newLine();
			bw.write(e.honest_copeland.printResults());		bw.newLine();
			bw.write(e.strategic_copeland.printResults());	bw.newLine();
			bw.write(e.hale.printResults());				bw.newLine();
			bw.write(e.lottery.printResults());				bw.newLine();
			bw.flush();
			if(i % 10000 == 0)
				System.out.println(i + " elections have been run " + " -- " + (int) Math.floor((System.nanoTime()-start)/1000000000/60) + " minutes " + (int)((System.nanoTime()-start)/1000000000)%60 + " seconds ellapsed.");
		}
		bw.close();
		
		/**************************************************************************************/
		
		CAND_NUM = 4;
		bw = new BufferedWriter(new FileWriter(new File("Results_7.txt")));
		
		start = System.nanoTime();
		for(int i = 0; i < 1000000; i++) {
			Election e = new Election(i);
			e.runElection();
			bw.write(e.printViews(0));						bw.newLine();
			bw.write(e.printViews(1));						bw.newLine();
			bw.write(e.population_utility.printResults());	bw.newLine();
			bw.write(e.honest_plurality.printResults());	bw.newLine();
			bw.write(e.rational_plurality.printResults());	bw.newLine();
			bw.write(e.honest_range.printResults());		bw.newLine();
			bw.write(e.strategic_range.printResults());		bw.newLine();
			bw.write(e.rational_range.printResults());		bw.newLine();
			bw.write(e.honest_borda.printResults());		bw.newLine();
			bw.write(e.rational_borda.printResults());		bw.newLine();
			bw.write(e.honest_copeland.printResults());		bw.newLine();
			bw.write(e.strategic_copeland.printResults());	bw.newLine();
			bw.write(e.hale.printResults());				bw.newLine();
			bw.write(e.lottery.printResults());				bw.newLine();
			bw.flush();
			if(i % 10000 == 0)
				System.out.println(i + " elections have been run " + " -- " + (int) Math.floor((System.nanoTime()-start)/1000000000/60) + " minutes " + (int)((System.nanoTime()-start)/1000000000)%60 + " seconds ellapsed.");
		}
		bw.close();

		/**************************************************************************************/
		
		CAND_NUM = 5;
		bw = new BufferedWriter(new FileWriter(new File("Results_7.txt")));
		
		start = System.nanoTime();
		for(int i = 0; i < 500000; i++) {
			Election e = new Election(i);
			e.runElection();
			bw.write(e.printViews(0));						bw.newLine();
			bw.write(e.printViews(1));						bw.newLine();
			bw.write(e.population_utility.printResults());	bw.newLine();
			bw.write(e.honest_plurality.printResults());	bw.newLine();
			bw.write(e.rational_plurality.printResults());	bw.newLine();
			bw.write(e.honest_range.printResults());		bw.newLine();
			bw.write(e.strategic_range.printResults());		bw.newLine();
			bw.write(e.rational_range.printResults());		bw.newLine();
			bw.write(e.honest_borda.printResults());		bw.newLine();
			bw.write(e.rational_borda.printResults());		bw.newLine();
			bw.write(e.honest_copeland.printResults());		bw.newLine();
			bw.write(e.strategic_copeland.printResults());	bw.newLine();
			bw.write(e.hale.printResults());				bw.newLine();
			bw.write(e.lottery.printResults());				bw.newLine();
			bw.flush();
			if(i % 5000 == 0) 
				System.out.println(i + " elections have been run " + " -- " + (int) Math.floor((System.nanoTime()-start)/1000000000/60) + " minutes " + (int)((System.nanoTime()-start)/1000000000)%60 + " seconds ellapsed.");
		}
		bw.close();

		/**************************************************************************************/
		
		CAND_NUM = 7;
		bw = new BufferedWriter(new FileWriter(new File("Results_7.txt")));
		
		start = System.nanoTime();
		for(int i = 0; i < 350000; i++) {
			Election e = new Election(i);
			e.runElection();
			bw.write(e.printViews(0));						bw.newLine();
			bw.write(e.printViews(1));						bw.newLine();
			bw.write(e.population_utility.printResults());	bw.newLine();
			bw.write(e.honest_plurality.printResults());	bw.newLine();
			bw.write(e.rational_plurality.printResults());	bw.newLine();
			bw.write(e.honest_range.printResults());		bw.newLine();
			bw.write(e.strategic_range.printResults());		bw.newLine();
			bw.write(e.rational_range.printResults());		bw.newLine();
			bw.write(e.honest_borda.printResults());		bw.newLine();
			bw.write(e.rational_borda.printResults());		bw.newLine();
			bw.write(e.honest_copeland.printResults());		bw.newLine();
			bw.write(e.strategic_copeland.printResults());	bw.newLine();
			bw.write(e.hale.printResults());				bw.newLine();
			bw.write(e.lottery.printResults());				bw.newLine();
			bw.flush();
			if(i % 3500 == 0) 
				System.out.println(i + " elections have been run " + " -- " + (int) Math.floor((System.nanoTime()-start)/1000000000/60) + " minutes " + (int)((System.nanoTime()-start)/1000000000)%60 + " seconds ellapsed.");
		}
		bw.close();

		/**************************************************************************************/
		
		CAND_NUM = 8;
		bw = new BufferedWriter(new FileWriter(new File("Results_8.txt")));
		
		start = System.nanoTime();
		for(int i = 0; i < 300000; i++) {
			Election e = new Election(i);
			e.runElection();
			bw.write(e.printViews(0));						bw.newLine();
			bw.write(e.printViews(1));						bw.newLine();
			bw.write(e.population_utility.printResults());	bw.newLine();
			bw.write(e.honest_plurality.printResults());	bw.newLine();
			bw.write(e.rational_plurality.printResults());	bw.newLine();
			bw.write(e.honest_range.printResults());		bw.newLine();
			bw.write(e.strategic_range.printResults());		bw.newLine();
			bw.write(e.rational_range.printResults());		bw.newLine();
			bw.write(e.honest_borda.printResults());		bw.newLine();
			bw.write(e.rational_borda.printResults());		bw.newLine();
			bw.write(e.honest_copeland.printResults());		bw.newLine();
			bw.write(e.strategic_copeland.printResults());	bw.newLine();
			bw.write(e.hale.printResults());				bw.newLine();
			bw.write(e.lottery.printResults());				bw.newLine();
			bw.flush();
			if(i % 3000 == 0) 
				System.out.println(i + " elections have been run " + " -- " + (int) Math.floor((System.nanoTime()-start)/1000000000/60) + " minutes " + (int)((System.nanoTime()-start)/1000000000)%60 + " seconds ellapsed.");
		}
		bw.close();

		/**************************************************************************************/
		
		CAND_NUM = 10;
		bw = new BufferedWriter(new FileWriter(new File("Results_10.txt")));
		
		start = System.nanoTime();
		for(int i = 0; i < 250000; i++) {
			Election e = new Election(i);
			e.runElection();
			bw.write(e.printViews(0));						bw.newLine();
			bw.write(e.printViews(1));						bw.newLine();
			bw.write(e.population_utility.printResults());	bw.newLine();
			bw.write(e.honest_plurality.printResults());	bw.newLine();
			bw.write(e.rational_plurality.printResults());	bw.newLine();
			bw.write(e.honest_range.printResults());		bw.newLine();
			bw.write(e.strategic_range.printResults());		bw.newLine();
			bw.write(e.rational_range.printResults());		bw.newLine();
			bw.write(e.honest_borda.printResults());		bw.newLine();
			bw.write(e.rational_borda.printResults());		bw.newLine();
			bw.write(e.honest_copeland.printResults());		bw.newLine();
			bw.write(e.strategic_copeland.printResults());	bw.newLine();
			bw.write(e.hale.printResults());				bw.newLine();
			bw.write(e.lottery.printResults());				bw.newLine();
			bw.flush();
			if(i % 2500 == 0) 
				System.out.println(i + " elections have been run " + " -- " + (int) Math.floor((System.nanoTime()-start)/1000000000/60) + " minutes " + (int)((System.nanoTime()-start)/1000000000)%60 + " seconds ellapsed.");
		}
		bw.close();

		/**************************************************************************************/
		
		CAND_NUM = 12;
		bw = new BufferedWriter(new FileWriter(new File("Results_12.txt")));
		
		start = System.nanoTime();
		for(int i = 0; i < 200000; i++) {
			Election e = new Election(i);
			e.runElection();
			bw.write(e.printViews(0));						bw.newLine();
			bw.write(e.printViews(1));						bw.newLine();
			bw.write(e.population_utility.printResults());	bw.newLine();
			bw.write(e.honest_plurality.printResults());	bw.newLine();
			bw.write(e.rational_plurality.printResults());	bw.newLine();
			bw.write(e.honest_range.printResults());		bw.newLine();
			bw.write(e.strategic_range.printResults());		bw.newLine();
			bw.write(e.rational_range.printResults());		bw.newLine();
			bw.write(e.honest_borda.printResults());		bw.newLine();
			bw.write(e.rational_borda.printResults());		bw.newLine();
			bw.write(e.honest_copeland.printResults());		bw.newLine();
			bw.write(e.strategic_copeland.printResults());	bw.newLine();
			bw.write(e.hale.printResults());				bw.newLine();
			bw.write(e.lottery.printResults());				bw.newLine();
			bw.flush();
			if(i % 2000 == 0) 
				System.out.println(i + " elections have been run " + " -- " + (int) Math.floor((System.nanoTime()-start)/1000000000/60) + " minutes " + (int)((System.nanoTime()-start)/1000000000)%60 + " seconds ellapsed.");
		}
		bw.close();

		/**************************************************************************************/
		
		CAND_NUM = 15;
		bw = new BufferedWriter(new FileWriter(new File("Results_15.txt")));
		
		start = System.nanoTime();
		for(int i = 0; i < 200000; i++) {
			Election e = new Election(i);
			e.runElection();
			bw.write(e.printViews(0));						bw.newLine();
			bw.write(e.printViews(1));						bw.newLine();
			bw.write(e.population_utility.printResults());	bw.newLine();
			bw.write(e.honest_plurality.printResults());	bw.newLine();
			bw.write(e.rational_plurality.printResults());	bw.newLine();
			bw.write(e.honest_range.printResults());		bw.newLine();
			bw.write(e.strategic_range.printResults());		bw.newLine();
			bw.write(e.rational_range.printResults());		bw.newLine();
			bw.write(e.honest_borda.printResults());		bw.newLine();
			bw.write(e.rational_borda.printResults());		bw.newLine();
			bw.write(e.honest_copeland.printResults());		bw.newLine();
			bw.write(e.strategic_copeland.printResults());	bw.newLine();
			bw.write(e.hale.printResults());				bw.newLine();
			bw.write(e.lottery.printResults());				bw.newLine();
			bw.flush();
			if(i % 2000 == 0) 
				System.out.println(i + " elections have been run " + " -- " + (int) Math.floor((System.nanoTime()-start)/1000000000/60) + " minutes " + (int)((System.nanoTime()-start)/1000000000)%60 + " seconds ellapsed.");
		}
		bw.close();

		/**************************************************************************************/
		
		CAND_NUM = 20;
		bw = new BufferedWriter(new FileWriter(new File("Results_20.txt")));
		
		start = System.nanoTime();
		for(int i = 0; i < 120000; i++) {
			Election e = new Election(i);
			e.runElection();
			bw.write(e.printViews(0));						bw.newLine();
			bw.write(e.printViews(1));						bw.newLine();
			bw.write(e.population_utility.printResults());	bw.newLine();
			bw.write(e.honest_plurality.printResults());	bw.newLine();
			bw.write(e.rational_plurality.printResults());	bw.newLine();
			bw.write(e.honest_range.printResults());		bw.newLine();
			bw.write(e.strategic_range.printResults());		bw.newLine();
			bw.write(e.rational_range.printResults());		bw.newLine();
			bw.write(e.honest_borda.printResults());		bw.newLine();
			bw.write(e.rational_borda.printResults());		bw.newLine();
			bw.write(e.honest_copeland.printResults());		bw.newLine();
			bw.write(e.strategic_copeland.printResults());	bw.newLine();
			bw.write(e.hale.printResults());				bw.newLine();
			bw.write(e.lottery.printResults());				bw.newLine();
			bw.flush();
			if(i % 1200 == 0) 
				System.out.println(i + " elections have been run " + " -- " + (int) Math.floor((System.nanoTime()-start)/1000000000/60) + " minutes " + (int)((System.nanoTime()-start)/1000000000)%60 + " seconds ellapsed.");
		}
		bw.close();

		/**************************************************************************************/
		
		CAND_NUM = 25;
		bw = new BufferedWriter(new FileWriter(new File("Results_25.txt")));
		
		start = System.nanoTime();
		for(int i = 0; i < 100000; i++) {
			Election e = new Election(i);
			e.runElection();
			bw.write(e.printViews(0));						bw.newLine();
			bw.write(e.printViews(1));						bw.newLine();
			bw.write(e.population_utility.printResults());	bw.newLine();
			bw.write(e.honest_plurality.printResults());	bw.newLine();
			bw.write(e.rational_plurality.printResults());	bw.newLine();
			bw.write(e.honest_range.printResults());		bw.newLine();
			bw.write(e.strategic_range.printResults());		bw.newLine();
			bw.write(e.rational_range.printResults());		bw.newLine();
			bw.write(e.honest_borda.printResults());		bw.newLine();
			bw.write(e.rational_borda.printResults());		bw.newLine();
			bw.write(e.honest_copeland.printResults());		bw.newLine();
			bw.write(e.strategic_copeland.printResults());	bw.newLine();
			bw.write(e.hale.printResults());				bw.newLine();
			bw.write(e.lottery.printResults());				bw.newLine();
			bw.flush();
			if(i % 1000 == 0) 
				System.out.println(i + " elections have been run " + " -- " + (int) Math.floor((System.nanoTime()-start)/1000000000/60) + " minutes " + (int)((System.nanoTime()-start)/1000000000)%60 + " seconds ellapsed.");
		}
		bw.close();
	}
	
	public static void main(String[] args) { 
		try {
			new Main();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
}
